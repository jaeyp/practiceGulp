1. initialize git
~$ git init

2. scaffolding - creating directories & empty files

3. creating a new repository on github

4. adding the repository on project
~$ git remote add origin https://github.com/jaeyp/practiceGulp
~$ git pull origin master --allow-unrelated-histories
~$ git push origin master

5. initialize npm project
~$ npm init
5-1 remove "main" fields from package.json since this is not a module but a standalone program.

6. install Gulp
~$ npm i gulp-cli -g
~$ npm i gulp -D
~$ npm -p touch nodetouch gulpfile.json

7. install Babel packages
~$ npm i @babel/register @babel/core -D
7-1 install preset-env in order to use preset instead of adding lots of babel plugins in .babelrc
~$ npm i @babel/preset-env -D
7-2. edit .babelrc
  { 
    // we can define "presets:" instead of "plugins:"
    // presets is like a bundle package (collection of plugins)
    // official plugins:
    //    @babel/preset-env
    //    @babel/preset-flow
    //    @babel/preset-react
    //    @babel/preset-typescript

    "presets": ["@babel/preset-env"]
    // with this setting, all the plugins to enable transforms for ES2015+ are installed at once.
  }

8. edit package.json
  "scripts": {
    ...
    "dev": "gulp dev",
    "build": "gulp build"
    "deploy": "gulp deploy"
  },

// 9. pug templates -> html
9. install gulp-pug
~$ npm i gulp-pug -D

// 10. support to clear existing dest (build directory)
10. install del
~$ npm i del -D

// 11. live webserver for testing
11 install gulp-webserver
~$ npm i gulp-webserver -D

// 12. optimize image file
12. install gulp-image
~$ npm i gulp-image -D

// 13-15. SCSS -> minify + CSS + browser backward compatibility
13. install gulp-sass
~$ npm i node-sass gulp-sass -D

14. install gulp-autoprefixer for browser backward compatibility
~$ npm i gulp-autoprefixer -D
14-1. add browserslist in package.json
  "browserslist": [ <=== be careful! it's a bracket! not curly bracket!
    "last 2 version"
  ]

15. install gulp-csso to minify CSS
~$ npm i gulp-csso -D

// 16-18. JavaScript ES6+ -> minify + uglify + ES5
16. install browserify plugin "gulp-bro" in order to allows developers to write Node.js-style modules that compile for use in the browser
# What is browserify?
# Simply, it allows us to use require() in the browser!
~$ npm i gulp-bro -D

17. install babelify plugin
~$ npm i babelify -D

18. install uglifyify plugin
~$ npm i uglifyify -D

19. install gulp-gh-pages plugin to publish contents to Github pages
~$ npm i gulp-gh-pages -D

20. develop and deploy
- npm run build
- npm run dev
http://localhost:8000
- npm run deploy
https://jaeyp.github.io/practiceGulp/

--------------------------------------------
cf. vscode workspace setting (local setting)
Command Palette(Ctrl+Shift+P or f1) > Open User Settings > Workbench > Appearance > Check "Edit in settings.json"

cf. vscode user setting (global setting)
Command Palette(Ctrl+Shift+P or f1) > Open Settings (JSON)